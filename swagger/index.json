{
  "openapi": "3.0.3",
  "info": {
    "title": "SMACKDAB",
    "version": "1.0.0",
    "description": "API docs",
    "contact": {
      "name": "Your Name",
      "email": "your@email.com"
    },
    "license": {
      "name": "Your License",
      "url": "https://your-license-url.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1",
      "description": "Local Development Server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication APIs"
    },
    {
      "name": "User",
      "description": "User APIs"
    },
    {
      "name": "Role",
      "description": "Role APIs"
    },
    {
      "name": "Organization",
      "description": "Organization APIs"
    },
    {
      "name": "Lead",
      "description": "Lead APIs"
    },
    {
<<<<<<< HEAD
      "name": "Account",
      "description": "Account APIs"
    },
    {
      "name": "Contact",
      "description": "Contact APIs"
    },
    {
      "name": "Department",
      "description": "Department APIs"
    },
    {
      "name": "Activity",
      "description": "Activity APIs"
    },
    {
      "name": "Deal Stage History",
      "description": "v APIs"
    },
    {
      "name": "Activity Result",
      "description": "Activity Result APIs"
    },
    {
      "name": "General Route",
      "description": "General Route APIs"
    },
    {
      "name": "Entity Attribute",
      "description": "Entity Attribute APIs"
    },
    {
      "name": "User Social AccountCompose Mail Connect Entity APIs"
    },
    {
      "name": "Mail Template",
      "description": "Mail Template APIs"
    },
    {
      "name": "Compose Mail Connect Entity",
      "description": "Mail Template APIs"
    },
    {
      "name": "Timeline",
      "description": "Timeline APIs"
    },
    {
      "name": "Notification Setting",
      "description": "Notification Setting APIs"
    },
    {
      "name": "Notification",
      "description": "Notification APIs"
    },
    {
      "name": "User Session",
      "description": "User Session APIs"
    },
    {
      "name": "View",
      "description": "View APIs"
    },
    {
      "name": "Trash",
      "description": "Trash APIs"
    },
    {
      "name": "Address",
      "description": "Address APIs"
    },
    {
      "name": "Organization Setting",
      "description": "Organization Setting APIs"
    },
    {
      "name": "Hierarchy",
      "description": "Hierarchy APIs"
    },
    {
      "name": "Hierarchy Block Detail",
      "description": "Hierarchy Block Detail APIs"
    },
    {
      "name": "Hierarchy Department",
      "description": "Hierarchy Department APIs"
    },
    {
      "name": "Web Hook",
      "description": "Web Hook APIs"
    },
    {
      "name": "Strategy",
      "description": "Strategy APIs"
=======
      "name": "Tag",
      "description": "Tag APIs"
    },
    {
      "name": "Stream",
      "description": "Stream APIs"
    },
    {
      "name": "Snippet",
      "description": "Snippet APIs"
    },
    {
      "name": "Snippet-Category",
      "description": "Snippet-Category APIs"
    },
    {
      "name": "Note",
      "description": "Note APIs"
    },
    {
      "name": "Attachment",
      "description": "Attachment APIs"
    },
    {
      "name": "Pipeline",
      "description": "Pipeline APIs"
    },
    {
      "name": "Zoom",
      "description": "Zoom APIs"
    },
    {
      "name": "Activity-Type",
      "description": "Activity-Type APIs"
    },
    {
      "name": "General-Setting",
      "description": "General-Setting APIs"
    },
    {
      "name": "Product-Version",
      "description": "Product-Version APIs"
    },
    {
      "name": "Smtp-Imap",
      "description": "Smtp-Imap APIs"
    },
    {
      "name": "PushNotification",
      "description": "PushNotification APIs"
    },
    {
      "name": "Search",
      "description": "Search APIs"
    },
    {
      "name": "StayInTouchActivity",
      "description": "StayInTouchActivity APIs"
    },
    {
      "name": "Comment",
      "description": "Comment APIs"
    },
    {
      "name": "Follow-Entity",
      "description": "Follow-Entity APIs"
    },
    {
      "name": "Reaction",
      "description": "Reaction APIs"
    },
    {
      "name": "Icon-Type",
      "description": "Icon-Type APIs"
    },
    {
      "name": "Super-Admin",
      "description": "Super-Admin APIs"
    },
    {
      "name": "Recall",
      "description": "Recall APIs"
    },
    {
      "name": "Org-Alert",
      "description": "Org-Alert APIs"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register User API",
        "description": "Add a new User",
        "operationId": "addUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegister"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegister"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/auth/email-exist": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Check if an email exists in a specific organization",
        "operationId": "emailExist",
        "requestBody": {
          "description": "Email to Check",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": null
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "isExist": {
                  "type": "boolean",
                  "description": "Indicates if the email exists"
                }
              }
            }
          },
          "400": {
            "description": "Email already exists",
            "schema": {
              "type": "object",
              "properties": {
                "isExist": {
                  "type": "boolean",
                  "description": "Indicates if the email exists"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Authenticate a user and generate a session",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "headers": {
              "Set-Cookie": null,
              "schema": {
                "type": "string",
                "example": "JSESSIONID=abcde12345; Path=/; HttpOnly"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "verified": {
                  "type": "boolean",
                  "description": "Indicates if the user is verified"
                },
                "branches": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "branch_name": {
                        "type": "string",
                        "description": "Name of the branch"
                      },
                      "branch_id": {
                        "type": "integer",
                        "description": "ID of the branch"
                      }
                    }
                  }
                },
                "two_factor_enabled": {
                  "type": "boolean",
                  "description": "Indicates if two-factor authentication is enabled for the user"
                },
                "two_factor_verified": {
                  "type": "boolean",
                  "description": "Indicates if two-factor authentication is verified for the user"
                },
                "user_two_2fa": {
                  "type": "boolean",
                  "description": "Indicates if two-factor authentication is enabled for the user"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "summary": "Logout User",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "User logged out successfully"
          },
          "400": {
            "description": "Bad request, session data not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/switch-organization": {
      "get": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Switch User's Active Organization",
        "parameters": [
          {
            "name": "xorganization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The name or ID of the organization to switch"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization switched successfully"
          },
          "400": {
            "description": "Bad request, missing or invalid branch information in the header"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/google": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Authenticate a user using Google Sign-In",
        "requestBody": {
          "description": "Google Sign-In credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idToken": {
                    "type": "string",
                    "description": "Google ID token"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "User's timezone"
                  }
                },
                "required": [
                  "idToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Google Sign-In",
            "schema": {
              "type": "object",
              "properties": {
                "new_register": {
                  "type": "boolean",
                  "description": "Indicates if the user is a new registration"
                },
                "branches": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "branch_name": {
                        "type": "string",
                        "description": "Name of the branch"
                      },
                      "branch_id": {
                        "type": "integer",
                        "description": "ID of the branch"
                      }
                    }
                  }
                },
                "two_factor_enabled": {
                  "type": "boolean",
                  "description": "Indicates if two-factor authentication is enabled for the user"
                },
                "two_factor_verified": {
                  "type": "boolean",
                  "description": "Indicates if two-factor authentication is verified for the user"
                },
                "user_two_2fa": {
                  "type": "boolean",
                  "description": "Indicates if two-factor authentication is enabled for the user"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid Google Sign-In credentials"
          },
          "403": {
            "description": "Forbidden, password reset token required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/apple": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Authenticate a user using Apple Sign-In",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authorization": {
                    "type": "object",
                    "properties": {
                      "id_token": {
                        "type": "string",
                        "description": "Apple ID token"
                      }
                    },
                    "required": [
                      "id_token"
                    ]
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "description": "User's first name from Apple"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "User's last name from Apple"
                      }
                    }
                  },
                  "timezone": {
                    "type": "string",
                    "description": "User's timezone"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Apple Sign-In",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "new_register": {
                      "type": "boolean",
                      "description": "Indicates if the user is a new registration"
                    },
                    "branches": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "branch_name": {
                            "type": "string",
                            "description": "Name of the branch"
                          },
                          "branch_id": {
                            "type": "integer",
                            "description": "ID of the branch"
                          }
                        }
                      }
                    },
                    "two_factor_enabled": {
                      "type": "boolean",
                      "description": "Indicates if two-factor authentication is enabled for the user"
                    },
                    "two_factor_verified": {
                      "type": "boolean",
                      "description": "Indicates if two-factor authentication is verified for the user"
                    },
                    "user_two_2fa": {
                      "type": "boolean",
                      "description": "Indicates if two-factor authentication is enabled for the user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid Apple Sign-In credentials"
          },
          "403": {
            "description": "Forbidden, password reset token required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/2FA/verify": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Verify Two-Factor Authentication Setup",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The two-factor authentication code"
                  },
                  "secret": {
                    "type": "string",
                    "description": "The user's secret for two-factor authentication setup"
                  },
                  "twoFa_status": {
                    "type": "boolean",
                    "description": "2FA Status"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "verified": {
                      "type": "boolean",
                      "description": "Indicates if the two-factor authentication setup is verified"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid parameters or user secret not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/2FA/qr": {
      "get": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Two-Factor Authentication With QR",
        "responses": {
          "200": {
            "description": "Two factor authentication QR fetch success"
          },
          "400": {
            "description": "Bad request, invalid parameters or user secret not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/create-organization-with-initial-profile": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create Organization With Initial Profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationName": {
                    "type": "string"
                  },
                  "organizationCategory": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization Created With Initial Profile"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/verify-account-by-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Account Verification Using Email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account Verified Successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Forgot Password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the user who forgot their password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset link sent successfully"
          },
          "400": {
            "description": "Bad request, user not found or other validation errors"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "$ref": "#/paths/~1auth~1set-password/post"
      }
    },
    "/auth/change-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Reset Password",
        "parameters": [
          {
            "in": "header",
            "name": "xorganization",
            "type": "string",
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password Changed Successfully"
          },
          "400": {
            "description": "Bad request, invalid token or user not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/set-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Reset Password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The token for password reset"
                  },
                  "password": {
                    "type": "string",
                    "description": "The new password for the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Bad request, invalid token or user not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/resend-verification": {
      "get": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Resend verification email to a user",
        "responses": {
          "200": {
            "description": "Verification email resent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the email was resent successfully"
                    },
                    "verified": {
                      "type": "boolean",
                      "description": "Indicates if the user is already verified"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, user not found or user already verified"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create User",
        "operationId": "createUser",
        "parameters": [
          {
            "in": "header",
            "name": "xorganization",
            "type": "string",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string"
                  },
                  "report_to": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "date_format": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update User",
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "header",
            "name": "xorganization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string"
                  },
                  "two_factor_enabled": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "secret_2fa": {
                    "type": "string"
                  },
                  "date_format": {
                    "type": "string"
                  },
                  "report_to": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Personal details updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete User",
        "operationId": "deleteAllUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "transfer_id": {
                    "type": "string"
                  },
                  "report_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Selected Users deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get User By ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/logged-in-user": {
      "get": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Logged In User",
        "operationId": "getLoggedInUser",
        "responses": {
          "200": {
            "description": "User Logged-In successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/get-data": {
      "post": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Users fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/get-descendants-users": {
      "get": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Descendants Users",
        "operationId": "getDescendantsUsers",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "module",
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "type": "string"
          },
          {
            "in": "query",
            "name": "select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/get-hierarchy-users": {
      "get": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Hierarchy Users",
        "operationId": "getHierarchyUsers",
        "parameters": [
          {
            "in": "query",
            "name": "depth_level",
            "type": "string"
          },
          {
            "in": "query",
            "name": "select",
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "type": "string"
          },
          {
            "in": "query",
            "name": "userId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "$ref": "#/paths/~1users/put"
      },
      "get": {
        "$ref": "#/paths/~1users/get"
      }
    },
    "/roles": {
      "post": {
        "tags": [
          "Role"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Add Role",
        "operationId": "addRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "modules": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role created successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Role"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get All Roles",
        "operationId": "getRoles",
        "responses": {
          "200": {
            "description": "Roles fetched Successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Roles",
        "operationId": "deleteRoles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "transfer_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "xorganization",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Roles deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/roles/is-exist": {
      "get": {
        "tags": [
          "Role"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Check Role Existence",
        "operationId": "roleIsExist",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Role Exists"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/roles/permissions": {
      "get": {
        "tags": [
          "Role"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get All Permissions",
        "operationId": "getAllPermissions",
        "responses": {
          "200": {
            "description": "Role Permissions fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/roles/get-data": {
      "get": {
        "$ref": "#/paths/~1roles/get"
      }
    },
    "/roles/{id}": {
      "put": {
        "tags": [
          "Role"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update Profile",
        "operationId": "updateProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "modules": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "xorganization",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Role updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Role"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Role By ID",
        "operationId": "getRoleById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Role updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/roles/permissions/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Profile Permissions",
        "operationId": "getProfilePermissions",
        "parameters": [
          {
            "in": "query",
            "name": "withAll",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Role Permissions fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update Profile Permissions",
        "operationId": "updateProfilePermissions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modules": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string"
          },
          {
            "in": "header",
            "name": "xorganization",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organizations": {
      "post": {
        "tags": [
          "Organization"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create Organization",
        "operationId": "createOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization_category": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "mobile": {
                    "type": "string"
                  },
                  "fax": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "address1": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state_id": {
                    "type": "string"
                  },
                  "country_id": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "address_details": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization created successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Organization"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update Organization",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address1": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "organization_category": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "website": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "country_id": {
                    "type": "number"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "county": {
                    "type": "string"
                  },
                  "state_id": {
                    "type": "number"
                  },
                  "city": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company details updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Organization"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Organization By ID",
        "operationId": "getOrganizationById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization created successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organizations/{id}": {
      "put": {
        "$ref": "#/paths/~1organizations/put"
      },
      "get": {
        "$ref": "#/paths/~1organizations/get"
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Organization",
        "operationId": "createOrganization",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organizations/organizations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Organizations",
        "operationId": "getOrganizationById",
        "responses": {
          "200": {
            "description": "Organizations fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/leads": {
      "post": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create Lead",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pipeline_id": {
                    "type": "integer"
                  },
                  "is_deal": {
                    "type": "boolean"
                  },
                  "deal_stage_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "integer"
                  },
                  "lead_owner_id": {
                    "type": "integer"
                  },
                  "lead_status_id": {
                    "type": "integer"
                  },
                  "probability": {
                    "type": "string"
                  },
                  "lead_temp_id": {
                    "type": "integer"
                  },
                  "lead_score": {
                    "type": "string"
                  },
                  "closing_date": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "deal_value": {
                    "type": "string"
                  },
                  "related_account": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "object",
                        "items": {}
                      },
                      "old": {
                        "type": "object",
                        "items": {}
                      }
                    }
                  },
                  "contacts": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "object",
                        "items": {}
                      },
                      "old": {
                        "type": "object",
                        "items": {}
                      }
                    }
                  },
                  "lead_source": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "object",
                        "items": {}
                      },
                      "old": {
                        "type": "object",
                        "items": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lead created successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Lead",
        "operationId": "deleteManyLeads",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allId": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Leads deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get All Leads",
        "operationId": "getAllLeads",
        "responses": {
          "200": {
            "description": "Leads fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/leads/columns": {
      "post": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get All Leads",
        "operationId": "getAllLeads",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "schema": {
              "type": "object",
              "properties": {
                "is_deal": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lead Columns fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/leads/advance-filter": {
      "post": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Lead Advance Filter Data",
        "operationId": "getAdvanceFilterData",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "type": "object",
            "properties": {
              "is_deal": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lead Advance Filter Data fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/leads/restore": {
      "post": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Restore Deleted Leads",
        "operationId": "restoreDeletedLeads",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {}
                  },
                  "is_deal": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lead restored successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/leads/destroy": {
      "post": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Destroy Deleted Leads",
        "operationId": "destroyDeletedLeads",
        "parameters": [
          {
            "in": "header",
            "name": "xorganization",
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {}
                  },
                  "is_deal": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lead destroyed successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/leads/get-data": {
      "post": {
        "$ref": "#/paths/~1leads/get"
      }
    },
    "/leads/get-data/{id}": {
      "post": {
        "$ref": "#/paths/~1leads~1source/get"
      }
    },
    "/leads/source": {
      "get": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Lead By ID",
        "operationId": "getLeadById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Lead fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/leads/count": {
      "get": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Leads Count",
        "operationId": "getLeadsCount",
        "responses": {
          "200": {
            "description": "Lead Counts fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/leads/{id}": {
      "get": {
        "$ref": "#/paths/~1leads~1source/get"
      },
      "put": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update Lead",
        "operationId": "updateLeadById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "lead_status_id": {
                    "type": "integer"
                  },
                  "lead_temp_id": {
                    "type": "integer"
                  },
                  "lead_owner_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "lead_score": {
                    "type": "integer"
                  },
                  "deal_stage_id": {
                    "type": "integer"
                  },
                  "deal_value": {
                    "type": "integer"
                  },
                  "probability": {
                    "type": "integer"
                  },
                  "is_deal": {
                    "type": "boolean"
                  },
                  "pipeline_id": {
                    "type": "integer"
                  },
                  "closing_date": {
                    "type": "string"
                  },
                  "related_account": {
                    "type": "object",
                    "items": {}
                  },
                  "reason": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "keepTimelineEmails": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "data": {
                        "type": "number"
                      },
                      "keep": {
                        "type": "boolean"
                      }
                    }
                  },
                  "is_converted": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lead Updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Lead",
        "operationId": "deleteLead",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Lead Deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/leads/getWonLostStages/{id}": {
      "get": {
        "tags": [
          "Lead"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Won Lost Stages From Lead Id",
        "operationId": "getWonLostStagesFromLeadId",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "stageType",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Lead's won-lost stages fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/accounts": {
      "post": {
        "tags": [
          "Account"
=======
    "/tags": {
      "post": {
        "tags": [
          "Tag"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Create Account",
        "operationId": "createAccount",
=======
        "summary": "Create Tag",
        "operationId": "craeteTag",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emails": {
                    "type": "array",
                    "items": {}
                  },
                  "name": {
                    "type": "string"
                  },
                  "annual_revenue": {
                    "type": "integer"
                  },
                  "employees": {
                    "type": "string"
                  },
                  "fax": {
                    "type": "string"
                  },
                  "related_contacts": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {}
                      },
                      "old": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  },
                  "phones": {
                    "type": "array",
                    "items": {}
                  },
                  "account_owner_id": {
                    "type": "integer"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "state_id": {
                    "type": "integer"
                  },
                  "country_id": {
                    "type": "integer"
                  },
                  "parent_account_id": {
                    "type": "integer"
                  },
                  "rating": {
                    "type": "integer"
                  },
                  "website": {
                    "type": "string"
                  },
                  "account_type": {
                    "type": "string"
                  },
                  "ownership": {
                    "type": "string"
                  },
                  "industry": {
                    "type": "string"
                  },
                  "address1": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "county": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "account_image": {
                    "type": "string"
                  },
                  "initial_color": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account created successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Accounts",
        "operationId": "getAccounts",
        "parameters": [
          {
            "in": "query",
            "name": "qjson",
            "schema": {
              "type": "object",
              "items": {}
            }
          },
          {
            "in": "query",
            "name": "tableName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Many Accounts",
        "operationId": "deleteManyAccounts",
        "parameters": [
          {
            "in": "query",
            "name": "qjson",
            "schema": {
              "type": "object",
              "items": {}
            }
          },
          {
            "in": "query",
            "name": "tableName",
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allId": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Accounts deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/columns": {
      "get": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Account Columns",
        "operationId": "getColumns",
        "responses": {
          "200": {
            "description": "Account Columns fetched Successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/restore": {
      "post": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Restore Deleted Accounts",
        "operationId": "restoreDeletedAccounts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountIds": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account created successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/destroy": {
      "post": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Destroy Deleted Accounts",
        "operationId": "destroyDeletedAccounts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountIds": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Selected Accounts deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/get-data": {
      "post": {
        "$ref": "#/paths/~1accounts/get"
      }
    },
    "/accounts/advance-filter": {
      "post": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Advance Filter Data",
        "operationId": "getAdvanceFilterData",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "select",
            "type": "string",
            "example": "id,name,emails,phones,account_image,initial_color"
          },
          {
            "in": "query",
            "name": "subQuery",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string",
            "example": "-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Account created successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/get-data/{id}": {
      "post": {
        "$ref": "#/paths/~1accounts~1%7Bid%7D/get"
      }
    },
    "/accounts/count": {
      "get": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Account Count",
        "operationId": "getAccountCount",
        "responses": {
          "200": {
            "description": "Account count fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/get-parent-accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Parent Accounts",
        "operationId": "getParentAccounts",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/check-parent-account": {
      "get": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Check For Parent Account",
        "operationId": "checkForParentAccount",
        "parameters": [
          {
            "in": "query",
            "name": "parent_id",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "account_id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Parent selected successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/get-parent-child-account": {
      "get": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Parent Child Account",
        "operationId": "getParentChildAccount",
        "parameters": [
          {
            "in": "query",
            "name": "parent_account_id",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "account_id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/getAccountsWithoutItsChild": {
      "get": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Accounts Without Its Child",
        "operationId": "getAccountsWithoutItsChild",
        "parameters": [
          {
            "in": "query",
            "name": "account_id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Account",
        "operationId": "getAccount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Account fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update Account",
        "operationId": "updateAccount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "zip": {
                    "type": "integer"
                  },
                  "annual_revenue": {
                    "type": "integer"
                  },
                  "employees": {
                    "type": "string"
                  },
                  "fax": {
                    "type": "string"
                  },
                  "related_contacts": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {}
                      },
                      "old": {
                        "type": "array",
                        "items": {}
                      },
                      "updated": {
                        "type": "array",
                        "items": {}
                      },
                      "deleted": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "isPrimary": {
                          "type": "boolean"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "phones": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "isPrimary": {
                          "type": "boolean"
                        },
                        "phoneType": {
                          "type": "string",
                          "example": "Home"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "account_owner_id": {
                    "type": "integer"
                  },
                  "rating": {
                    "type": "integer"
                  },
                  "parent_account_id": {
                    "type": "integer"
                  },
                  "sub_account_id": {
                    "type": "integer"
                  },
                  "website": {
                    "type": "string"
                  },
                  "account_type": {
                    "type": "string"
                  },
                  "ownership": {
                    "type": "string"
                  },
                  "industry": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "county": {
                    "type": "string"
                  },
                  "state_id": {
                    "type": "integer"
                  },
                  "country_id": {
                    "type": "integer"
                  },
                  "address1": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string",
                    "example": "Asia/Calcutta"
                  },
                  "account_image": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "$ref": "#/paths/~1accounts~1%7Bid%7D/put"
      },
      "delete": {
        "$ref": "#/paths/~1accounts~1%7Bid%7D/put"
      }
    },
    "/contacts": {
      "post": {
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create Contact",
        "operationId": "createContact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "zip": {
                    "type": "string"
                  },
                  "twitter": {
                    "type": "string"
                  },
                  "skype": {
                    "type": "string"
                  },
                  "related_accounts": {
                    "type": "object",
                    "properties": {
                      "old": {
                        "type": "array",
                        "items": {}
                      },
                      "new": {
                        "type": "array"
                      }
                    }
                  },
                  "related_contacts": {
                    "type": "object",
                    "properties": {
                      "old": {
                        "type": "array",
                        "items": {}
                      },
                      "new": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  },
                  "phones": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "is_primary": {
                          "type": "boolean"
                        },
                        "phoneType": {
                          "type": "string",
                          "example": "Fax"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "timezone": {
                    "type": "string",
                    "example": "America/New_York"
                  },
                  "contact_owner_id": {
                    "type": "integer"
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "is_primary": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "department": {
                    "type": "string"
                  },
                  "reporting_to": {
                    "type": "integer"
                  },
                  "birth_date": {
                    "type": "string"
                  },
                  "address1": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "country_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "job_role": {
                    "type": "string"
                  },
                  "contact_image": {
                    "type": "string"
                  },
                  "county": {
                    "type": "string"
                  },
                  "initial_color": {
                    "type": "string",
                    "example": "dark__TextColor"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact created successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Contacts",
        "operationId": "getContacts",
        "parameters": [
          {
            "in": "query",
            "name": "qjson",
            "schema": {
              "type": "object",
              "items": {}
            }
          },
          {
            "in": "query",
            "name": "tableName",
            "type": "string"
          },
          {
            "in": "query",
            "name": "include",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Many Contacts",
        "operationId": "deleteManyContacts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allId": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contacts deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/contacts/count": {
      "get": {
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Contact Count",
        "operationId": "getContactCount",
        "responses": {
          "200": {
            "description": "Contact count fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/contacts/columns": {
      "get": {
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Contact Columns",
        "operationId": "getColumns",
        "responses": {
          "200": {
            "description": "Contact Columns Fetched Successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/contacts/advance-filter": {
      "post": {
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Contact Columns",
        "operationId": "getColumns",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "select",
            "type": "string",
            "example": "id,name,emails,phones,contact_image,initial_color"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string",
            "example": "-id"
          },
          {
            "in": "query",
            "name": "tableName",
            "type": "string",
            "example": "Contact"
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/contacts/restore": {
      "post": {
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Contact Count",
        "operationId": "getContactCount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trash Contacts restored successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/contacts/destroy": {
      "delete": {
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Destroy Deleted Contacts",
        "operationId": "destroyDeletedContacts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contacts deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/contacts/get-data": {
      "delete": {
        "$ref": "#/paths/~1contacts/get"
      }
    },
    "/contacts/get-data/{id}": {
      "post": {
        "$ref": "#/paths/~1contacts~1%7Bid%7D/get"
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Contact",
        "operationId": "getContact",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Contact fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update Count",
        "operationId": "updateContact",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "zip": {
                    "type": "string"
                  },
                  "twitter": {
                    "type": "string"
                  },
                  "skype": {
                    "type": "string"
                  },
                  "related_accounts": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {},
                        "example": {
                          "name": "fgxhxd",
                          "job_role": "role",
                          "is_primary": "true",
                          "timezone": "Asia/Calcutta"
                        }
                      },
                      "old": {
                        "type": "array",
                        "items": {}
                      },
                      "updated": {
                        "type": "array",
                        "items": {}
                      },
                      "deleted": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  },
                  "related_contacts": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {},
                        "example": {
                          "name": "fgxhxd",
                          "job_role": "role",
                          "timezone": "Asia/Calcutta"
                        }
                      },
                      "old": {
                        "type": "array",
                        "items": {}
                      },
                      "updated": {
                        "type": "array",
                        "items": {}
                      },
                      "deleted": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  },
                  "phones": {
                    "type": "object",
                    "properties": {
                      "is_primary": {
                        "type": "boolean"
                      },
                      "phoneType": {
                        "type": "string",
                        "example": "office"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "timezone": {
                    "type": "string",
                    "example": "Asia/Calcutta"
                  },
                  "contact_owner_id": {
                    "type": "integer"
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "is_primary": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "department": {
                    "type": "string"
                  },
                  "reporting_to": {
                    "type": "integer"
                  },
                  "birth_date": {
                    "type": "string"
                  },
                  "address1": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "country_id": {
                    "type": "integer"
                  },
                  "city": {
                    "type": "integer"
                  },
                  "state_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "job_role": {
                    "type": "string"
                  },
                  "contact_image": {
                    "type": "string"
                  },
                  "county": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trash Contacts restored successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Contact",
        "operationId": "deleteContact",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/departments": {
      "post": {
        "tags": [
          "Department"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create Department",
        "operationId": "createDepartment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "admin_id": {
                    "type": "integer"
                  },
                  "users": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department created successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Department"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Departments",
        "operationId": "getDepartments",
        "responses": {
          "200": {
            "description": "Departments fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Department"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Department",
        "operationId": "deleteDepartment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allId": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/departments/get-data": {
      "post": {
        "$ref": "#/paths/~1departments/get"
      }
    },
    "/departments/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Department",
        "operationId": "getDepartment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Department fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Department"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update Department",
        "operationId": "updateDepartment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "admin_id": {
                    "type": "integer"
                  },
                  "users": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activities": {
      "post": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Add Activity",
        "operationId": "addActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "duration": {
                          "type": "integer"
                        },
                        "durationType": {
                          "type": "integer"
                        },
                        "notificationType": {
                          "type": "string",
                          "example": "notification"
                        }
                      }
                    }
                  },
                  "availability": {
                    "type": "string",
                    "example": "Busy"
                  },
                  "activity_type_id": {
                    "type": "integer"
                  },
                  "assigned_to_id": {
                    "type": "integer"
                  },
                  "topic": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "integer"
                  },
                  "start_date": {
                    "type": "string"
                  },
                  "is_visibility": {
                    "type": "boolean"
                  },
                  "agenda": {
                    "type": "string"
                  },
                  "guests": {
                    "type": "array",
                    "items": {}
                  },
                  "activity_collaborators": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "old": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "zoom_meeting_details": {
                    "type": "object",
                    "items": {}
                  },
                  "location_details": {
                    "type": "object",
                    "items": {}
                  },
                  "all_day": {
                    "type": "boolean"
                  },
                  "host_id": {
                    "type": "integer"
                  },
                  "should_send_mail": {
                    "type": "boolean"
                  },
                  "activity_participants": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "participant_emails": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "participant_id": {
                              "type": "integer"
                            },
                            "participant_name": {
                              "type": "string"
                            },
                            "participant_type": {
                              "type": "string",
                              "example": "Contact"
                            },
                            "activity_email_setting": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "email_status": {
                                    "type": "string",
                                    "example": "disabled"
                                  },
                                  "should_send_mail": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "old": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "participant_emails": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "participant_id": {
                              "type": "integer"
                            },
                            "participant_name": {
                              "type": "string"
                            },
                            "participant_type": {
                              "type": "string",
                              "example": "Contact"
                            },
                            "activity_email_setting": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "email_status": {
                                    "type": "string",
                                    "example": "disabled"
                                  },
                                  "should_send_mail": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "activity_contact": {
                    "type": "object",
                    "items": {}
                  },
                  "activity_account": {
                    "type": "object",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity added successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get All Activities",
        "operationId": "getAllActivities",
        "responses": {
          "200": {
            "description": "Activities fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Activities",
        "operationId": "deleteActivities",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allId": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activities/restore": {
      "post": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Restore Deleted Activities",
        "operationId": "restoreDeletedActivities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activityIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trash Activities restored successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activities/destroy": {
      "post": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Destroy Deleted Activities",
        "operationId": "destroyDeletedActivities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activityIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity type deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activities/get-data": {
      "post": {
        "$ref": "#/paths/~1activities/get"
      }
    },
    "/activities/get-data/{id}": {
      "post": {
        "$ref": "#/paths/~1activities~1%7Bid%7D/get"
      }
    },
    "/activities/count": {
      "get": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Activity Count",
        "operationId": "getActivityCount",
        "responses": {
          "200": {
            "description": "Activities count fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activities/columns": {
      "get": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Activity Columns",
        "operationId": "getColumns",
        "responses": {
          "200": {
            "description": "Activity Columns Fetched Successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activities/advance-filter": {
      "get": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Activity Advance Filter Data",
        "operationId": "getAdvanceFilterData",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "select",
            "type": "string",
            "example": "id,guests,topic,start_date,end_date,duration,is_active"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string",
            "example": "-id"
          },
          {
            "in": "query",
            "name": "tableName",
            "type": "string",
            "example": "Activity"
          }
        ],
        "responses": {
          "200": {
            "description": "Activities fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activities/confirm-availability": {
      "get": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Change Active Status",
        "operationId": "changeActiveStatus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_active": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Action Successful"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activities/{id}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Activity",
        "operationId": "getActivityById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Activity fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Restore Deleted Activities",
        "operationId": "restoreDeletedActivities",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "object",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "duration": {
                          "type": "integer"
                        },
                        "durationType": {
                          "type": "integer"
                        },
                        "notificationType": {
                          "type": "string",
                          "example": "notification"
                        }
                      }
                    }
                  },
                  "availability": {
                    "type": "string",
                    "example": "Busy"
                  },
                  "activity_type_id": {
                    "type": "integer"
                  },
                  "assigned_to_id": {
                    "type": "integer"
                  },
                  "topic": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "integer"
                  },
                  "start_date": {
                    "type": "string"
                  },
                  "is_visibility": {
                    "type": "boolean"
                  },
                  "agenda": {
                    "type": "string"
                  },
                  "guests": {
                    "type": "array",
                    "items": {}
                  },
                  "activity_collaborators": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "old": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "zoom_meeting_details": {
                    "type": "object",
                    "items": {}
                  },
                  "location_details": {
                    "type": "object",
                    "items": {}
                  },
                  "all_day": {
                    "type": "boolean"
                  },
                  "host_id": {
                    "type": "integer"
                  },
                  "should_send_mail": {
                    "type": "boolean"
                  },
                  "activity_participants": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "participant_emails": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "participant_id": {
                              "type": "integer"
                            },
                            "participant_name": {
                              "type": "string"
                            },
                            "participant_type": {
                              "type": "string",
                              "example": "Contact"
                            },
                            "activity_email_setting": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "email_status": {
                                    "type": "string",
                                    "example": "disabled"
                                  },
                                  "should_send_mail": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "old": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "participant_emails": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "participant_id": {
                              "type": "integer"
                            },
                            "participant_name": {
                              "type": "string"
                            },
                            "participant_type": {
                              "type": "string",
                              "example": "Contact"
                            },
                            "activity_email_setting": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "email_status": {
                                    "type": "string",
                                    "example": "disabled"
                                  },
                                  "should_send_mail": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "activity_contact": {
                    "type": "object",
                    "items": {}
                  },
                  "activity_account": {
                    "type": "object",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "$ref": "#/paths/~1activities~1%7Bid%7D/put"
      }
    },
    "/activities/change-active-status/{id}": {
      "patch": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Confirm Guest Availability",
        "operationId": "confirmGuestAvailability",
        "parameters": [
          {
            "in": "query",
            "name": "activity_id",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "guest_mail",
            "type": "string"
          },
          {
            "in": "query",
            "name": "participant_id",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "action",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Confirmed Guest Availability"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activities/follow-up/{id}": {
      "post": {
        "tags": [
          "Activity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Follow-Up Activity",
        "operationId": "followUpActivity",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "example": "Email"
                  },
                  "start_date": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "integer"
                  },
                  "agenda": {
                    "type": "string"
                  },
                  "activity_lead_id": {
                    "type": "integer"
                  },
                  "activity_account": {
                    "type": "object",
                    "properties": {
                      "old": {
                        "type": "integer"
                      },
                      "new": {
                        "type": "integer"
                      }
                    }
                  },
                  "activity_contact": {
                    "type": "object",
                    "properties": {
                      "old": {
                        "type": "integer"
                      },
                      "new": {
                        "type": "integer"
                      }
                    }
                  },
                  "guests": {
                    "type": "array",
                    "items": {}
                  },
                  "availability": {
                    "type": "string",
                    "example": "Busy"
                  },
                  "assigned_to_id": {
                    "type": "integer"
                  },
                  "activity_type_id": {
                    "type": null
                  },
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "duration": {
                          "type": "integer"
                        },
                        "durationType": {
                          "type": "integer"
                        },
                        "notificationType": {
                          "type": "string",
                          "example": "notification"
                        }
                      }
                    }
                  },
                  "all_day": {
                    "type": "boolean"
                  },
                  "location": {
                    "type": "array",
                    "items": {}
                  },
                  "location_details": {
                    "type": "object",
                    "properties": {
                      "position": {
                        "type": "object",
                        "properties": {
                          "lat": {
                            "type": "string"
                          },
                          "lng": {
                            "type": "string"
                          }
                        }
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  },
                  "activity_collaborators": {
                    "type": "object",
                    "items": {},
                    "example": "{\"new\":[1]}"
                  },
                  "host_id": {
                    "type": "integer"
                  },
                  "activity_participants": {
                    "type": "object",
                    "example": "new:[2]",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  },
                  "result": {
                    "type": "string"
                  },
                  "is_visibility": {
                    "type": "boolean"
                  "name": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "created_by": {
                    "type": "integer"
                  },
                  "updated_by": {
                    "type": "integer"
                  },
                  "organization_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Activities fetched successfully"
=======
            "description": "Tag created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
<<<<<<< HEAD
      }
    },
    "/deal-stage-history": {
      "get": {
        "tags": [
          "Deal Stage History"
=======
      },
      "delete": {
        "tags": [
          "Tag"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Deal Histories",
        "operationId": "getDealHistories",
        "responses": {
          "200": {
            "description": "Deal histories fetched successfully"
=======
        "summary": "Delete Tag",
        "operationId": "deleteTags",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Tag Deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
<<<<<<< HEAD
      },
      "post": {
        "tags": [
          "Deal Stage History"
=======
      }
    },
    "/tags/get-data": {
      "get": {
        "tags": [
          "Tag"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Add Deal Stage History",
        "operationId": "addDealStageHistory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deal_id": {
                    "type": "integer"
                  },
                  "stage_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deal histories fetched successfully"
=======
        "summary": "Get Tags",
        "operationId": "getTags",
        "responses": {
          "200": {
            "description": "Tag fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/deal-stage-history/{id}": {
      "get": {
        "tags": [
          "Deal Stage History"
=======
    "/tags/assign/:id": {
      "get": {
        "tags": [
          "Tag"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Active Stage By Deal Id",
        "operationId": "getActiveStageByDealId",
=======
        "summary": "Get Tag By ID",
        "operationId": "assignTag",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "parameters": [
          {
            "in": "path",
            "name": "id",
<<<<<<< HEAD
            "type": "integer",
            "required": true
=======
            "type": "string"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        ],
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Deal history fetched successfully"
=======
            "description": "Tag fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      },
      "post": {
        "tags": [
<<<<<<< HEAD
          "Deal Stage History"
=======
          "Tag"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update Stage By Deal ID",
        "operationId": "updateStageByDealID",
=======
        "summary": "Assign Tag",
        "operationId": "assignTag",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "parameters": [
          {
            "in": "path",
            "name": "id",
<<<<<<< HEAD
            "type": "integer",
            "required": true
=======
            "type": "string"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "start_date": {
                    "type": "string"
                  },
                  "old_start_date": {
                    "type": "string"
                  },
                  "currentStageType": {
=======
                  "tags": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "object",
                        "items": {}
                      },
                      "old": {
                        "type": "object",
                        "items": {}
                      }
                    }
                  },
                  "modelName": {
                    "type": "string"
                  },
                  "message": {
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Deal stage changed successfully"
=======
            "description": "Assign Tag successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/deal-stage-history/dealAge/{id}": {
      "get": {
        "tags": [
          "Deal Stage History"
=======
    "/tags/:id": {
      "put": {
        "tags": [
          "Tag"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Deal Age By Deal Id",
        "operationId": "getDealAgeByDealId",
=======
        "summary": "Update Tag",
        "operationId": "updateTag",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
<<<<<<< HEAD
        "responses": {
          "200": {
            "description": "Deal age fetched successfully"
=======
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag Updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/activity-result": {
      "post": {
        "tags": [
          "Activity Result"
=======
    "/tags/arrange/:id": {
      "post": {
        "tags": [
          "Tag"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Create Activity Result",
        "operationId": "createActivityResult",
=======
        "summary": "Reassign Tag",
        "operationId": "reAssignTag",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string"
          }
        ],
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "result": {
                    "type": "string"
                  },
                  "activity_types": {
                    "type": "array",
                    "items": {}
                  },
                  "isMemo": {
                    "type": "boolean"
                  },
                  "is_universal": {
                    "type": "boolean"
=======
                  "tags": {
                    "type": "array",
                    "items": {}
                  },
                  "modelName": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Activity result created successfully"
=======
            "description": "Reassign Tag successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "get": {
        "tags": [
          "Activity Result"
=======
            "description": "Internal server error"
          }
        }
      }
    },
    "/stream": {
      "post": {
        "tags": [
          "Stream"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Activity Results",
        "operationId": "getActivityResults",
        "responses": {
          "200": {
            "description": "Activity results fetched successfully"
=======
        "summary": "Create Streams",
        "operationId": "createStreamUserData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "created_by": {
                    "type": "integer"
                  },
                  "updated_by": {
                    "type": "integer"
                  },
                  "organization_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streams created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "delete": {
        "tags": [
          "Activity Result"
=======
            "description": "Internal server error"
          }
        }
      }
    },
    "/streams/:id": {
      "put": {
        "tags": [
          "Stream"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Delete Many Activity Results",
        "operationId": "deleteManyActivityResults",
=======
        "summary": "Update Streams",
        "operationId": "editStreamUserData",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "allId": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
=======
                  "name": {
                    "type": "string"
                  },
                  "stream_id": {
                    "type": "integer"
                  },
                  "user_id": {
                    "type": "integer"
                  },
                  "created_by": {
                    "type": "integer"
                  },
                  "updated_by": {
                    "type": "integer"
                  },
                  "organization_id": {
                    "type": "integer"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Selected Activity results deleted successfully"
=======
            "description": "Streams Updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      }
    },
    "/activity-result/get-data": {
      "post": {
        "$ref": "#/paths/~1activity-result/get"
      }
    },
    "/activity-result/{id}": {
      "post": {
        "$ref": "#/paths/~1activity-result/get"
      },
      "get": {
        "tags": [
          "Activity Result"
=======
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Stream"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Activity Result",
        "operationId": "getActivityResult",
=======
        "summary": "Delete Streams",
        "operationId": "deleteStreamUserData",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Activity result fetched successfully"
=======
            "description": "Streams Deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "put": {
        "tags": [
          "Activity Result"
=======
            "description": "Internal server error"
          }
        }
      }
    },
    "/snippet": {
      "post": {
        "tags": [
          "Snippet"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update Activity Result",
        "operationId": "updateActivityResult",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
=======
        "summary": "Create Snippet",
        "operationId": "createSnippet",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "result": {
                    "type": "string"
                  },
                  "removed_activity_middle_table_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "new_activity_types": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "activity_type_id": {
                          "type": "integer"
                        },
                        "organization_id": {
                          "type": "integer"
                        },
                        "activity_result_id": {
                          "type": "integer"
                        },
                        "created_by": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "isMemo": {
                    "type": "boolean"
                  },
                  "is_universal": {
                    "type": "boolean"
=======
                  "type": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "category_id": {
                    "type": "integer"
                  },
                  "snippet": {
                    "type": "string"
                  },
                  "accessibility": {
                    "type": "string"
                  },
                  "created_by": {
                    "type": "integer"
                  },
                  "updated_by": {
                    "type": "integer"
                  },
                  "organization_id": {
                    "type": "integer"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Activity result updated successfully"
=======
            "description": "Snippet created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "patch": {
        "$ref": "#/paths/~1activity-result~1%7Bid%7D/put"
      },
      "delete": {
        "$ref": "#/paths/~1activity-result~1%7Bid%7D/put"
      }
    },
    "/general/timezone-list": {
      "get": {
        "tags": [
          "General Route"
=======
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Snippet"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Timezone List",
        "operationId": "timezoneList",
        "responses": {
          "200": {
            "description": "Timezone list fetched successfully"
=======
        "summary": "Delete Snippet",
        "operationId": "deleteSnippets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allIds": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Snippet-Category Updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/general/get-time-zone": {
      "get": {
        "tags": [
          "General Route"
=======
    "/snippet/get-data": {
      "post": {
        "tags": [
          "Snippet"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Timezone By Latitude and Longitude",
        "operationId": "timezoneByLatLng",
        "parameters": [
          {
            "in": "query",
            "name": "latitude",
            "type": "string"
          },
          {
            "in": "query",
            "name": "longitude",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Timezone fetched successfully"
=======
        "summary": "Get All Snippet",
        "operationId": "getSnippets",
        "responses": {
          "200": {
            "description": "Snippet fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/general/emit-io": {
      "post": {
        "tags": [
          "General Route"
=======
    "/snippet/:id": {
      "put": {
        "tags": [
          "Snippet"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Emit-Io",
        "operationId": "emitIo",
=======
        "summary": "Update Snippet",
        "operationId": "updateSnippet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "eventName": {
                    "type": "string"
                  },
                  "eventData": {
                    "type": "object",
                    "items": {}
=======
                  "title": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "category_id": {
                    "type": "integer"
                  },
                  "snippet": {
                    "type": "string"
                  },
                  "accessibility": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "integer"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "IO event emitted successfully"
=======
            "description": "Snippet Updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/check-field-is-unique": {
      "post": {
        "tags": [
          "General Route"
=======
    "/snippet-category": {
      "post": {
        "tags": [
          "Snippet-Category"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Check Field Is Unique For Contact And Account",
        "operationId": "checkFieldIsUniqueForContactAndAccount",
=======
        "summary": "Create Snippet-Category",
        "operationId": "createSnippetCategory",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "email": {
                    "type": "string"
                  },
                  "accountId": {
                    "type": "integer"
                  },
                  "contactId": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "relatedContact": {
                    "type": "string"
=======
                  "name": {
                    "type": "string"
                  },
                  "created_by": {
                    "type": "integer"
                  },
                  "updated_by": {
                    "type": "integer"
                  },
                  "organization_id": {
                    "type": "integer"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Action Successful"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server errors"
          }
        }
      }
    },
    "/entity-attributes": {
      "get": {
        "tags": [
          "Entity Attribute"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Entity Attributes",
        "operationId": "getEntityAttributes",
        "responses": {
          "200": {
            "description": "Entity Attributes fetched successfully"
=======
            "description": "Snippet-Category created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "post": {
        "tags": [
          "Entity Attribute"
=======
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Snippet-Category"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Create Entity Attribute",
        "operationId": "createEntityAttribute",
=======
        "summary": "Delete Snippet-Category",
        "operationId": "deleteSnippetCategories",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
=======
                  "allId": {
                    "type": "array",
                    "items": {}
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Entity Attributes created successfully"
=======
            "description": "Snippet-Category Updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "delete": {
        "$ref": "#/paths/~1entity-attributes/post"
      }
    },
    "/entity-attributes/get-data": {
      "post": {
        "$ref": "#/paths/~1entity-attributes/get"
      }
    },
    "/entity-attributes/{id}": {
      "post": {
        "tags": [
          "Entity Attribute"
=======
            "description": "Internal server error"
          }
        }
      }
    },
    "/snippet-category/get-data": {
      "post": {
        "tags": [
          "Snippet-Category"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Entity Attribute",
        "operationId": "getEntityAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity Attribute fetched successfully"
=======
        "summary": "Get All Snippet-Category",
        "operationId": "getSnippetCategories",
        "responses": {
          "200": {
            "description": "Snippet-Category fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "patch": {
        "$ref": "#/paths/~1entity-attributes~1%7Bid%7D/put"
      },
      "put": {
        "tags": [
          "Entity Attribute"
=======
            "description": "Internal server error"
          }
        }
      }
    },
    "/snippet-category/:id": {
      "put": {
        "tags": [
          "Snippet-Category"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update Entity Attribute",
        "operationId": "updateEntityAttribute",
=======
        "summary": "Update Snippet-Category",
        "operationId": "updateSnippetCategory",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
<<<<<<< HEAD
                  "color": {
                    "type": "string"
                  },
                  "type": {
=======
                  "message": {
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Entity Attribute updated successfully"
=======
            "description": "Snippet-Category Updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "delete": {
        "tags": [
          "Entity Attribute"
=======
            "description": "Internal server error"
          }
        }
      }
    },
    "/notes": {
      "post": {
        "tags": [
          "Note"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Delete Many Entity Attributes",
        "operationId": "deleteManyEntityAttributes",
=======
        "summary": "Create Note",
        "operationId": "addNote",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "allId": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "type": {
                    "type": "string"
=======
                  "model_name": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "model_record_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "created_by": {
                    "type": "integer"
                  },
                  "updated_by": {
                    "type": "integer"
                  },
                  "organization_id": {
                    "type": "integer"
                  },
                  "is_drafted": {
                    "type": "boolean"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Entity Attributes deleted successfully"
=======
            "description": "Note created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      }
    },
    "/user-social-account": {
      "get": {
        "tags": [
          "User Social Account"
=======
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Note"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Logged In User Tokens",
        "operationId": "getLoggedInUserTokens",
        "responses": {
          "200": {
            "description": "Logged-In User tokens fetched successfully"
=======
        "summary": "Get All Note",
        "operationId": "getAllNotes",
        "responses": {
          "200": {
            "description": "Note fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/user-social-account/{id}": {
      "delete": {
        "tags": [
          "User Social Account"
=======
    "/notes/:id": {
      "put": {
        "tags": [
          "Note"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Logged In User Tokens",
        "operationId": "getLoggedInUserTokens",
=======
        "summary": "Update Note",
        "operationId": "updateNoteById",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
<<<<<<< HEAD
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Data deleted successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server errors"
          }
        }
      }
    },
    "/user-social-account/{provider}/is-connected": {
      "get": {
        "tags": [
          "User Social Account"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Social Account Is Connected",
        "operationId": "isConnected",
        "parameters": [
          {
            "in": "path",
            "name": "provider",
            "type": "string",
            "required": true
=======
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "token_provider": {
                    "type": "string"
=======
                  "description": {
                    "type": "string"
                  },
                  "deletedAttachmentIds": {
                    "type": "array",
                    "items": {}
                  },
                  "is_drafted": {
                    "type": "boolean"
                  },
                  "userIds": {
                    "type": "array",
                    "items": {}
                  },
                  "is_pinned": {
                    "type": "boolean"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Connected provider details fetched successfully"
=======
            "description": "Note Updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      }
    },
    "/user-social-account/{provider}/disconnect": {
      "post": {
        "tags": [
          "User Social Account"
=======
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Note"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
<<<<<<< HEAD
            "ApiKeyAuth": []
          }
        ],
        "summary": "Disconnect Social Account",
        "operationId": "disConnect",
        "parameters": [
          {
            "in": "path",
            "name": "provider",
            "type": "string",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "token_provider": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User account disconnected successfully"
=======
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get All Note",
        "operationId": "getNoteById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Note fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      }
    },
    "/mail-template": {
      "post": {
        "tags": [
          "Mail Template"
=======
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Note"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Add Mail Template",
        "operationId": "addMailTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template_name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "filename": {
                          "type": "string"
                        },
                        "contentType": {
                          "type": "string"
                        },
                        "size": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "visibility": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template created successfully"
=======
        "summary": "Get All Note",
        "operationId": "deleteNoteById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Note deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
<<<<<<< HEAD
      },
      "delete": {
        "tags": [
          "Mail Template"
=======
      }
    },
    "/attachments": {
      "post": {
        "tags": [
          "Attachment"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Delete Mail Templates",
        "operationId": "deleteMailTemplates",
=======
        "summary": "Create Attachment",
        "operationId": "addAttachments",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "allId": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
=======
                  "model_name": {
                    "type": "string"
                  },
                  "model_record_id": {
                    "type": "integer"
                  },
                  "links": {
                    "type": "array",
                    "items": {}
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Selected templates deleted successfully"
=======
            "description": "Attachment created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
<<<<<<< HEAD
          "Mail Template"
=======
          "Attachments"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get All Mail Templates",
        "operationId": "getAllMailTemplates",
        "responses": {
          "200": {
            "description": "Templates fetched successfully"
=======
        "summary": "Get All Attachments",
        "operationId": "getAllAttachments",
        "responses": {
          "200": {
            "description": "Attachments fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
<<<<<<< HEAD
      }
    },
    "/mail-template/visibility": {
      "put": {
        "tags": [
          "Mail Template"
=======
      },
      "delete": {
        "tags": [
          "Attachment"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update Visibility",
        "operationId": "updateVisibility",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "visibility": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template updated successfully"
=======
        "summary": "Get All Attachment",
        "operationId": "deleteAttachments",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/mail-template/{id}": {
      "put": {
        "tags": [
          "Mail Template"
=======
    "/attachments/:id": {
      "get": {
        "tags": [
          "Attachments"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update Mail Template",
        "operationId": "updateMailTemplateById",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template_name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "filename": {
                          "type": "string"
                        },
                        "contentType": {
                          "type": "string"
                        },
                        "size": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "visibility": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template updated successfully"
=======
        "summary": "Get One Attachments",
        "operationId": "getAttachmentById",
        "responses": {
          "200": {
            "description": "Attachments fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
<<<<<<< HEAD
      "get": {
        "tags": [
          "Mail Template"
=======
      "put": {
        "tags": [
          "Attachment"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Mail Template",
        "operationId": "getMailTemplateById",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
=======
        "summary": "Update one Attachment",
        "operationId": "updateAttachmentById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Template fetched successfully"
=======
            "description": "Attachment Updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
<<<<<<< HEAD
          "Mail Template"
=======
          "Attachment"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Delete Mail Template",
        "operationId": "deleteMailTemplateById",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
=======
        "summary": "Get One Attachment",
        "operationId": "deleteAttachmentById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Selected template deleted successfully"
=======
            "description": "Attachment deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/compose-mail-connect-entity": {
      "post": {
        "tags": [
          "Compose Mail Connect Entity"
=======
    "/pipelines": {
      "post": {
        "tags": [
          "Pipeline"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Connect Entity With Compose Mail",
        "operationId": "connectEntityWithComposeMail",
=======
        "summary": "Add Pipeline",
        "operationId": "createPipeline",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "model_name": {
                    "type": "string"
                  },
                  "model_record_id": {
=======
                  "name": {
                    "type": "string"
                  },
                  "stages": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {}
                      },
                      "old": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  },
                  "is_default": {
                    "type": "boolean"
                  },
                  "rot_days": {
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Entity connected successfully"
=======
            "description": "Pipeline created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "delete": {
        "tags": [
          "Compose Mail Connect Entity"
=======
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Pipeline"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Remove Entity From Compose Mail",
        "operationId": "removeEntityFromComposeMaiById",
        "responses": {
          "200": {
            "description": "Entity removed successfully"
=======
        "summary": "Get Pipeline",
        "operationId": "getPipelines",
        "responses": {
          "200": {
            "description": "Pipeline fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      }
    },
    "/compose-mail-connect-entity/{id}": {
      "get": {
        "tags": [
          "Compose Mail Connect Entity"
=======
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Pipeline"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Compose Mail Entity Detail",
        "operationId": "getComposeMailEntityDetailByUserId",
        "responses": {
          "200": {
            "description": "Template fetched successfully"
=======
        "summary": "Delete Pipeline",
        "operationId": "deleteManyPipelines",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allIds": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pipeline Deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/timeline": {
      "get": {
        "tags": [
          "Timeline"
=======
    "/pipelines/:id": {
      "get": {
        "tags": [
          "Pipeline"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Timeline",
        "operationId": "getTimeline",
        "parameters": [
          {
            "in": "query",
            "name": "modelName",
            "type": "string"
          },
          {
            "in": "query",
            "name": "modelRecordIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "in": "query",
            "name": "allItemFilter",
            "schema": {
              "type": "object",
              "properties": {
                "activityTypeIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "notes": {
                  "type": "boolean"
                },
                "documents": {
                  "type": "boolean"
                },
                "info": {
                  "type": "boolean"
                },
                "hideRelatedRecord": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "userIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "in": "query",
            "name": "search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "relatedContactIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "in": "query",
            "name": "emailLabels",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Timelines fetched successfully"
=======
        "summary": "Get Pipeline",
        "operationId": "getPipeline",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Pipeline fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Pipeline"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update Pipeline",
        "operationId": "updateTag",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "stages": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {}
                      },
                      "old": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  },
                  "is_default": {
                    "type": "boolean"
                  },
                  "rot_days": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pipeline Updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "$ref": "#/paths/~1pipelines~1%3Aid/put"
      },
      "delete": {
        "tags": [
          "Pipeline"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Pipeline",
        "operationId": "deleteManyPipelines",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allIds": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pipeline Deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/timeline/dashboard-timeline": {
      "get": {
        "tags": [
          "Timeline"
=======
    "/pipelines/deleteStage/:id": {
      "delete": {
        "tags": [
          "Pipeline"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Timeline For Dashboard",
        "operationId": "getTimelineForDashboard",
        "responses": {
          "200": {
            "description": "Timelines fetched successfully"
=======
        "summary": "Delete Stage",
        "operationId": "deleteManyPipelines",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentStageId": {
                    "type": "integer"
                  },
                  "newStageId": {
                    "type": "integer"
                  },
                  "newPipelineId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stage Deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/timeline/stream-timeline": {
      "get": {
        "tags": [
          "Timeline"
=======
    "/zoom": {
      "post": {
        "tags": [
          "Zoom"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Timeline For Stream",
        "operationId": "getTimelineForStream",
        "parameters": [
          {
            "in": "query",
            "name": "userIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "in": "query",
            "name": "search",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Timelines fetched successfully"
=======
        "summary": "Add Zoom",
        "operationId": "createZoomMeeting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization_id": {
                    "type": "integer"
                  },
                  "host_id": {
                    "type": "integer"
                  },
                  "organizationUUID": {
                    "type": "string"
                  },
                  "providerData": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Zoom created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/timeline/pin/{id}": {
      "patch": {
        "tags": [
          "Timeline"
=======
    "/zoom/:id": {
      "patch": {
        "tags": [
          "Zoom"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Pin Or Unpin Timeline",
        "operationId": "pinOrUnpinTimelineById",
=======
        "summary": "Update Zoom",
        "operationId": "updateZoomMeetingUsingActivityID",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "parameters": [
          {
            "in": "path",
            "name": "id",
<<<<<<< HEAD
            "type": "integer",
            "required": true
          }
        ],
=======
            "type": "integer"
          }
        ],
        "required": true,
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "is_pinned": {
                    "type": "boolean"
=======
                  "organization_id": {
                    "type": "integer"
                  },
                  "host_id": {
                    "type": "integer"
                  },
                  "organizationUUID": {
                    "type": "string"
                  },
                  "providerData": {
                    "type": "array",
                    "items": {}
                  },
                  "meeting_id": {
                    "type": "string"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Timelines fetched successfully"
=======
            "description": "Zoom Updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/notification-setting": {
      "get": {
        "$ref": "#/paths/~1notifications~1read/get"
      }
    },
    "/notification-setting/set-time": {
      "patch": {
        "tags": [
          "Notification Setting"
=======
    "/zoom/delete/:id": {
      "delete": {
        "tags": [
          "Zoom"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update Next Execution Date",
        "operationId": "updateNextExecutionDate",
=======
        "summary": "Delete Zoom",
        "operationId": "deleteZoomMeeting",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "receive_notification_time": {
                    "type": "integer"
                  },
                  "name": {
=======
                  "host_id": {
                    "type": "integer"
                  },
                  "email": {
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Notification Setting updated successfully"
=======
            "description": "Zoom Deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/notification-setting/{id}": {
      "patch": {
        "tags": [
          "Notification Setting"
=======
    "/zoom/:userId/is-exist": {
      "get": {
        "tags": [
          "Zoom"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Zoom",
        "operationId": "isUserTokenExist",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "zoom fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/zoom/:user_id/phone-status": {
      "get": {
        "tags": [
          "Zoom"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update Notification Setting",
        "operationId": "updateNotificationSetting",
=======
        "summary": "Get Zoom",
        "operationId": "getZoomPhoneStatus",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
<<<<<<< HEAD
          }
        ],
=======
          },
          {
            "in": "query",
            "name": "call_id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Call status fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activity-type": {
      "post": {
        "tags": [
          "Activity-Type"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Add Activity-Type",
        "operationId": "addActivityType",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "status": {
                    "type": "string"
                  },
                  "notification_type_id": {
=======
                  "name": {
                    "type": "string"
                  },
                  "icon": {
                    "type": "string"
                  },
                  "parent_type": {
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Notification Setting updated successfully"
=======
            "description": "Activity Type created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
<<<<<<< HEAD
      }
    },
    "/notifications/get-data": {
      "get": {
        "$ref": "#/paths/~1notifications~1read/get"
      }
    },
    "/notifications/read": {
      "get": {
        "tags": [
          "Notification Setting"
=======
      },
      "get": {
        "tags": [
          "Activity-Type"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Notification Setting",
        "operationId": "getNotificationSetting",
        "responses": {
          "200": {
            "description": "Notification Setting fetched successfully"
=======
        "summary": "Get Activity-Type",
        "operationId": "getAllActivityTypes",
        "responses": {
          "200": {
            "description": "Activity-Type fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
<<<<<<< HEAD
      }
    },
    "/user-sessions/get-data": {
      "get": {
        "tags": [
          "User Session"
=======
      },
      "delete": {
        "tags": [
          "Activity-Type"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get User Sessions",
        "operationId": "getUserSessions",
        "responses": {
          "200": {
            "description": "User Sessions Fetched Successfully"
=======
        "summary": "Delete Activity-Type",
        "operationId": "deleteActivityTypes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allIds": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity-Type Deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/user-sessions/{id}": {
      "get": {
        "tags": [
          "User Session"
=======
    "/activity-type/get-data": {
      "get": {
        "tags": [
          "Activity-Type"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Remove UserSession",
        "operationId": "removeUserSession",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User Sessions removed Successfully"
=======
        "summary": "Get Activity-Type",
        "operationId": "getAllActivityTypes",
        "responses": {
          "200": {
            "description": "Activity-Type fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/views": {
      "post": {
        "tags": [
          "View"
=======
    "/activity-type/:id": {
      "put": {
        "tags": [
          "Activity-Type"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Create View",
        "operationId": "createView",
=======
        "summary": "Update Activity-Type",
        "operationId": "addActivityType",
        "parameters": [
          {
            "in": "query",
            "name": "toast",
            "type": "string"
          }
        ],
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
<<<<<<< HEAD
                  "model_name": {
                    "type": "string",
                    "example": "Lead"
                  },
                  "columns": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fieldName": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "STRING"
                        },
                        "fieldType": {
                          "type": "string"
                        },
                        "show": {
                          "type": "boolean"
                        },
                        "custom": {
                          "type": "boolean"
                        },
                        "default": {
                          "type": "boolean"
                        },
                        "width": {
                          "type": "integer"
                        },
                        "min_width": {
                          "type": "integer"
                        },
                        "is_pin": {
                          "type": "boolean"
                        },
                        "relational_model": {
                          "type": "string",
                          "example": "leads"
                        },
                        "order": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "filterType": {
                        "type": "string",
                        "example": "or"
                      },
                      "filter": {
                        "type": "array",
                        "items": {
                          "filterType": {
                            "type": "string",
                            "example": "or"
                          },
                          "filter": {
                            "type": "array",
                            "items": {}
                          }
                        }
                      }
                    }
                  },
                  "sort": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "column": {
                          "type": "object",
                          "items": {}
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "is_pin": {
                    "type": "boolean"
                  },
                  "visibility": {
                    "type": "string",
                    "example": "public"
                  },
                  "is_locked": {
                    "type": "boolean"
=======
                  "icon": {
                    "type": "string"
                  },
                  "parent_type": {
                    "type": "integer"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
<<<<<<< HEAD
        },
        "responses": {
          "200": {
            "description": "View Created Successfully"
=======
        },
        "responses": {
          "200": {
            "description": "Activity type updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Activity-Type"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Activity-Type",
        "operationId": "getActivityTypeById",
        "responses": {
          "200": {
            "description": "Activity type fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
<<<<<<< HEAD
          "View"
=======
          "Activity-Type"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Remove Views",
        "operationId": "removeViews",
=======
        "summary": "Delete Activity-Type",
        "operationId": "deleteActivityTypes",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "allId": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
=======
                  "allIds": {
                    "type": "array",
                    "items": {}
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Selected Views Removed Successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "View"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get All Views",
        "operationId": "getAllViews",
        "responses": {
          "200": {
            "description": "Views fetched Successfully"
=======
            "description": "Activity-Type Deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/views/get-data": {
      "post": {
        "$ref": "#/paths/~1views/get"
      }
    },
    "/views/get-data/{id}": {
      "post": {
        "$ref": "#/paths/~1views~1%7Bid%7D/post"
      }
    },
    "/views/update-view-order": {
      "post": {
        "tags": [
          "View"
=======
    "/general-settings": {
      "post": {
        "tags": [
          "General-Setting"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update View Order",
        "operationId": "updateViewOrder",
=======
        "summary": "Create General-Setting",
        "operationId": "createGeneralSettings",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "p_view_id": {
                    "type": "integer"
                  },
                  "p_order_id": {
                    "type": "integer"
                  },
                  "p_model_name": {
=======
                  "datalist": {
                    "type": "array",
                    "items": {}
                  },
                  "toastMsg": {
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "View Updated Successfully"
=======
            "description": "General-Setting created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
<<<<<<< HEAD
      }
    },
    "/views/{id}": {
      "post": {
        "tags": [
          "View"
=======
      },
      "get": {
        "tags": [
          "General-Setting"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get View",
        "operationId": "getView",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "View Fetched Successfully"
=======
        "summary": "Get General-Setting",
        "operationId": "getGeneralSettings",
        "responses": {
          "200": {
            "description": "General settings fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
<<<<<<< HEAD
      },
      "delete": {
        "$ref": "#/paths/~1views/delete"
      },
      "patch": {
        "$ref": "#/paths/~1views~1%7Bid%7D/put"
      },
      "put": {
        "tags": [
          "View"
=======
      }
    },
    "/product-version": {
      "post": {
        "tags": [
          "Product-Version"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update View",
        "operationId": "updateView",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
=======
        "summary": "Create Product-Version",
        "operationId": "addProductVersion",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "name": {
                    "type": "string"
                  },
                  "model_name": {
                    "type": "string",
                    "example": "Lead"
                  },
                  "columns": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fieldName": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "STRING"
                        },
                        "fieldType": {
                          "type": "string"
                        },
                        "show": {
                          "type": "boolean"
                        },
                        "custom": {
                          "type": "boolean"
                        },
                        "default": {
                          "type": "boolean"
                        },
                        "width": {
                          "type": "integer"
                        },
                        "min_width": {
                          "type": "integer"
                        },
                        "is_pin": {
                          "type": "boolean"
                        },
                        "relational_model": {
                          "type": "string",
                          "example": "leads"
                        },
                        "order": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "filterType": {
                        "type": "string",
                        "example": "or"
                      },
                      "filter": {
                        "type": "array",
                        "items": {
                          "filterType": {
                            "type": "string",
                            "example": "or"
                          },
                          "filter": {
                            "type": "array",
                            "items": {}
                          }
                        }
                      }
                    }
                  },
                  "sort": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "column": {
                          "type": "object",
                          "items": {}
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "is_pin": {
                    "type": "boolean"
                  },
                  "visibility": {
                    "type": "string",
                    "example": "public"
                  },
                  "is_locked": {
                    "type": "boolean"
=======
                  "type": {
                    "type": "string"
                  },
                  "version_number": {
                    "type": "string"
                  },
                  "release_date": {
                    "type": "string"
                  },
                  "changes": {
                    "type": "string"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "View updated Successfully"
=======
            "description": "Product-Version created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/trash": {
      "post": {
        "tags": [
          "Trash"
=======
    "/advance-option/smtp-imap/connect": {
      "post": {
        "tags": [
          "Smtp-Imap"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Trash Data",
        "operationId": "getData",
        "responses": {
          "200": {
            "description": "All Trash Data fetched successfully"
=======
        "summary": "Create Smtp-Imap",
        "operationId": "testImapSmtpConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "smtp": {
                    "type": "object",
                    "items": {}
                  },
                  "imap": {
                    "type": "object",
                    "items": {}
                  },
                  "api_purpose": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Smtp-Imap created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/address/countries": {
      "get": {
        "tags": [
          "Address"
=======
    "/advance-option/smtp-imap/me": {
      "get": {
        "tags": [
          "Smtp-Imap"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Countries",
        "operationId": "getCountries",
        "responses": {
          "200": {
            "description": "Countries fetched successfully"
=======
        "summary": "Get All Smtp-Imap",
        "operationId": "getCredentialsById",
        "responses": {
          "200": {
            "description": "Smtp-Imap fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      }
    },
    "/address/states": {
      "get": {
        "tags": [
          "Address"
=======
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Smtp-Imap"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get States",
        "operationId": "getStates",
        "responses": {
          "200": {
            "description": "States fetched successfully"
=======
        "summary": "Delete Smtp-Imap",
        "operationId": "deleteMyCredentials",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "all": {
                    "type": "integer",
                    "items": {}
                  },
                  "usernames": {
                    "type": "string",
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Smtp-Imap Deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/organization-settings": {
      "get": {
        "tags": [
          "Organization Setting"
=======
    "/subscribe": {
      "get": {
        "tags": [
          "PushNotification"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Organization Setting",
        "operationId": "getOrgSetting",
        "responses": {
          "200": {
            "description": "Organization Setting fetched successfully"
=======
        "summary": "Get All PushNotification",
        "operationId": "getUserNotificationSubScriptions",
        "responses": {
          "200": {
            "description": "PushNotification fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
<<<<<<< HEAD
      "put": {
        "tags": [
          "Organization Setting"
=======
      "post": {
        "tags": [
          "PushNotification"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Upsert Organization Setting",
        "operationId": "upsertOrgSetting",
=======
        "summary": "Create PushNotification",
        "operationId": "addUserSubscription",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "twoFA_status": {
                    "type": "boolean"
                  },
                  "org_ips": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "ip": {
                              "type": "string"
                            },
                            "start_time": {
                              "type": "string"
                            },
                            "end_time": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "updated": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "ip": {
                              "type": "string"
                            },
                            "start_time": {
                              "type": "string"
                            },
                            "end_time": {
                              "type": "string"
                            },
                            "id": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "deleted": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "organization_id": {
                    "type": "integer"
                  },
                  "pass_expire": {
                    "type": "integer"
                  },
                  "pass_reuse": {
                    "type": "integer"
                  },
                  "pass_length": {
                    "type": "integer"
                  },
                  "p_upper_lower": {
                    "type": "boolean"
                  },
                  "p_num_required": {
                    "type": "boolean"
                  },
                  "p_special_required": {
                    "type": "boolean"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "deleted_at": {
                    "type": "string"
                  },
                  "created_by": {
                    "type": "integer"
                  },
                  "updated_by": {
                    "type": "integer"
                  },
                  "creator": {
                    "type": "object",
                    "items": {}
                  },
                  "modifier": {
                    "type": "object",
                    "items": {}
                  },
                  "organization": {
                    "type": "object",
                    "items": {}
                  },
                  "enforce": {
                    "type": "object"
=======
                  "subscription": {
                    "type": "string"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Organization Setting updated successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hierarchy": {
      "get": {
        "tags": [
          "Hierarchy"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Hierarchy",
        "operationId": "getHierarchy",
        "responses": {
          "200": {
            "description": "Hierarchy fetched successfully"
=======
            "description": "PushNotification created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
<<<<<<< HEAD
      "post": {
        "tags": [
          "Hierarchy"
=======
      "delete": {
        "tags": [
          "PushNotification"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Create Or Update Hierarchy",
        "operationId": "createOrUpdateHierarchy",
=======
        "summary": "Delete PushNotification",
        "operationId": "deleteManyUserNotificationSubscriptions",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "blocks": {
                    "type": "array",
                    "items": {}
                  },
                  "edges": {
                    "type": "array",
=======
                  "allId": {
                    "type": "integer",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Hierarchy created successfully"
=======
            "description": "PushNotification Updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/hierarchy-block-details": {
      "get": {
        "tags": [
          "Hierarchy Block Detail"
=======
    "/subscribe/:id": {
      "get": {
        "tags": [
          "PushNotification"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get All Hierarchy Block Details",
        "operationId": "getAllHierarchyBlockDetails",
        "responses": {
          "200": {
            "description": "Hierarchy Block Details fetched successfully"
=======
        "summary": "Get User PushNotification",
        "operationId": "getUserNotificationSubScription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Uses notification subscription fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "post": {
        "tags": [
          "Hierarchy Block Detail"
=======
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "$ref": "#/paths/~1subscribe~1%3Aid/put"
      },
      "put": {
        "tags": [
          "PushNotification"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Create Hierarchy Block Details",
        "operationId": "createHierarchyBlockDetails",
=======
        "summary": "Update User Notification",
        "operationId": "updateUserSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
<<<<<<< HEAD
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
=======
                "type": "object",
                "properties": {
                  "subscription": {
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Hierarchy Block created successfully"
=======
            "description": "Uses notification subscription updated successfullyy"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      },
      "delete": {
<<<<<<< HEAD
        "tags": [
          "Hierarchy Block Detail"
=======
        "$ref": "#/paths/~1subscribe/delete"
      }
    },
    "/search/lead-deal-acc-cont": {
      "get": {
        "tags": [
          "Search"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Delete Hierarchy Block Details",
        "operationId": "deleteHierarchyBlockDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allId": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hierarchy Blocks deleted successfully"
=======
        "summary": "Get Search",
        "operationId": "getLeadDealAccContSearchQuery",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "searchText",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/hierarchy-block-details/{id}": {
      "get": {
        "tags": [
          "Hierarchy Block Detail"
=======
    "/search/compose-email-dropdown": {
      "get": {
        "tags": [
          "Search"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Hierarchy Block Details",
        "operationId": "getHierarchyBlockDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
=======
        "summary": "Get Email Search",
        "operationId": "getComposeEmailToQuery",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "searchText",
            "type": "string"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        ],
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Hierarchy Block Detail fetched successfully"
=======
            "description": "Dashboard data fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "put": {
        "tags": [
          "Hierarchy Block Detail"
=======
            "description": "Internal server error"
          }
        }
      }
    },
    "/schedule-activity": {
      "post": {
        "tags": [
          "StayInTouchActivity"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update Hierarchy Block Details",
        "operationId": "updateHierarchyBlockDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
=======
        "summary": "Create StayInTouchActivity",
        "operationId": "addStayInTouchActivity",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "managed_by": {
                    "type": "string"
=======
                  "activity_type_id": {
                    "type": "integer"
                  },
                  "creation_date": {
                    "type": "string"
                  },
                  "start_date": {
                    "type": "date"
                  },
                  "modal_record_id": {
                    "type": "integer"
                  },
                  "model_name": {
                    "type": "string"
                  },
                  "frequency": {
                    "type": "string"
                  },
                  "month_date_type": {
                    "type": "string"
                  },
                  "interval": {
                    "type": "integer"
                  },
                  "week_occurrence": {
                    "type": "integer"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Hierarchy Block updated successfully"
=======
            "description": "Activity scheduled created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "delete": {
        "tags": [
          "Hierarchy Block Detail"
=======
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "StayInTouchActivity"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Delete Hierarchy Block",
        "operationId": "deleteHierarchyBlockDetailsById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Hierarchy Block deleted successfully"
=======
        "summary": "Get All Schedule activity",
        "operationId": "getAllScheduleActivities",
        "responses": {
          "200": {
            "description": "Schedule activity fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      }
    },
    "/hierarchy-block-details/user-position/{id}": {
      "put": {
        "tags": [
          "Hierarchy Block Detail"
=======
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "StayInTouchActivity"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update Hierarchy Block Details For User Position",
        "operationId": "updateHierarchyBlockDetailsForUserPosition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
=======
        "summary": "Delete StayInTouchActivity",
        "operationId": "deleteScheduleActivities",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "position_user_id": {
=======
                  "all": {
                    "type": "integer",
                    "items": {}
                  },
                  "modal_record_id": {
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Position Hierarchy Block updated successfully"
=======
            "description": "Shedule Activity deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/hierarchy-departments": {
      "post": {
        "tags": [
          "Hierarchy Department"
=======
    "/schedule-activity/:id": {
      "get": {
        "tags": [
          "StayInTouchActivity"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Create Hierarchy Department",
        "operationId": "createDepartment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department created successfully"
=======
        "summary": "Get All Schedule activity",
        "operationId": "getScheduledActivityByModalRecordId",
        "responses": {
          "200": {
            "description": "Schedule activity fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "get": {
        "tags": [
          "Hierarchy Department"
=======
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "StayInTouchActivity"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Hierarchy Departments",
        "operationId": "getDepartments",
        "responses": {
          "200": {
            "description": "Departments fetched successfully"
=======
        "summary": "Update StayInTouchActivity",
        "operationId": "updateScheduledActivityById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activity_type_id": {
                    "type": "integer"
                  },
                  "creation_date": {
                    "type": "string"
                  },
                  "start_date": {
                    "type": "date"
                  },
                  "modal_record_id": {
                    "type": "integer"
                  },
                  "model_name": {
                    "type": "string"
                  },
                  "frequency": {
                    "type": "string"
                  },
                  "month_date_type": {
                    "type": "string"
                  },
                  "interval": {
                    "type": "integer"
                  },
                  "week_occurrence": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Scheduled activity updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "delete": {
        "tags": [
          "Hierarchy Department"
=======
            "description": "Internal server error"
          }
        }
      }
    },
    "/comments": {
      "post": {
        "tags": [
          "Comment"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Delete Hierarchy Department",
        "operationId": "deleteDepartment",
=======
        "summary": "Create Comment",
        "operationId": "addComment",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "allId": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
=======
                  "comment": {
                    "type": "string"
                  },
                  "timeline_id": {
                    "type": "integer"
                  },
                  "model_name": {
                    "type": "string"
                  },
                  "model_record_id": {
                    "type": "integer"
                  },
                  "userIds": {
                    "type": "array",
                    "items": {}
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Selected Departments deleted successfully"
=======
            "description": "Comment created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/hierarchy-departments/{id}": {
      "get": {
        "tags": [
          "Hierarchy Department"
=======
    "/comments/:id": {
      "delete": {
        "tags": [
          "Comment"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Get Hierarchy Department",
        "operationId": "getDepartment",
=======
        "summary": "Delete Comment",
        "operationId": "deleteComment",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Department fetched successfully"
=======
            "description": "Comment deleted successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      },
      "put": {
        "tags": [
          "Hierarchy Department"
=======
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "Comment"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Update Hierarchy Department",
        "operationId": "updateDepartment",
=======
        "summary": "Update Comment",
        "operationId": "updateUserSubscription",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "name": {
                    "type": "string"
=======
                  "comment": {
                    "type": "string"
                  },
                  "timeline_id": {
                    "type": "integer"
                  },
                  "userIds": {
                    "type": "array",
                    "items": {}
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Department updated successfully"
=======
            "description": "Comment updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/gmail-webhook": {
      "post": {
        "tags": [
          "Web Hook"
=======
    "/follow-entity/:module/:entityId/follow": {
      "post": {
        "tags": [
          "Follow-Entity"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Listen Gmail Changes",
        "operationId": "listenGmailChanges",
=======
        "summary": "Create Follow-Entity",
        "operationId": "followEntity",
        "parameters": [
          {
            "in": "path",
            "name": "entityId",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "module",
            "type": "string"
          }
        ],
        "required": true,
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "message": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "string"
                      }
                    }
=======
                  "follower_ids": {
                    "type": "array",
                    "items": {}
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "WebHook Listened Successfully"
=======
            "description": "Entity Followed successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/outlook/webhook": {
      "post": {
        "tags": [
          "Web Hook"
=======
    "/follow-entity/:module/:entityId/un-follow": {
      "post": {
        "tags": [
          "Follow-Entity"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Outlook Mail Webhook Callback",
        "operationId": "outlookMailWebhookCallback",
        "parameters": [
          {
            "in": "query",
            "name": "validationToken",
            "type": "string"
          }
        ],
=======
        "summary": "Create unFollow-Entity",
        "operationId": "unFollowEntity",
        "parameters": [
          {
            "in": "path",
            "name": "entityId",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "module",
            "type": "string"
          }
        ],
        "required": true,
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "subscriptionId": {
                          "type": "integer"
                        },
                        "subscriptionExpirationDateTime": {
                          "type": "string"
                        },
                        "changeType": {
                          "type": "string",
                          "enum": [
                            "updated",
                            "created",
                            "deleted"
                          ]
                        },
                        "resource": {
                          "type": "string"
                        },
                        "resourceData": {
                          "type": "object",
                          "properties": {
                            "@odata.id": {
                              "type": "string"
                            },
                            "@odata.etag": {
                              "type": "string"
                            },
                            "id": {
                              "type": "integer"
                            }
                          }
                        },
                        "clientState": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "integer"
                        }
                      }
                    }
=======
                  "follower_ids": {
                    "type": "array",
                    "items": {}
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
<<<<<<< HEAD
        },
        "responses": {
          "200": {
            "description": "Outlook-Mail WebHook Callback Successfully"
=======
        },
        "responses": {
          "200": {
            "description": "Entity UnFollowed successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/follow-entity/:module/get-data": {
      "post": {
        "tags": [
          "Follow-Entity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Follow-Entity",
        "operationId": "getFollowerEntities",
        "parameters": [
          {
            "in": "path",
            "name": "module",
            "type": "string"
          }
        ],
        "required": true,
        "responses": {
          "200": {
            "description": "Followers fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/google-calendar/webhook": {
      "post": {
        "tags": [
          "Web Hook"
=======
    "/follow-entity/get-data": {
      "post": {
        "tags": [
          "Follow-Entity"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Listen Google Calendar Changes",
        "operationId": "listenGoogleCalendarChanges",
        "parameters": [
          {
            "in": "header",
            "name": "x-goog-channel-id",
            "type": "string"
          },
          {
            "in": "header",
            "name": "x-goog-resource-id",
            "type": "string"
          },
          {
            "in": "header",
            "name": "x-goog-resource-state",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Google-Calendar Changes Listened Successfully"
=======
        "summary": "Get Entity",
        "operationId": "getFollowingEntities",
        "responses": {
          "200": {
            "description": "Entity fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/follow-entity/get-count": {
      "post": {
        "tags": [
          "Follow-Entity"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Following Count",
        "operationId": "getFollowingCount",
        "responses": {
          "200": {
            "description": "Entity Following Count Fetched Successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/outlook-calendar/webhook": {
      "post": {
        "tags": [
          "Web Hook"
=======
    "/reaction": {
      "post": {
        "tags": [
          "Reaction"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Outlook Calendar Webhook Callback",
        "operationId": "outlookCalendarWebhookCallback",
        "parameters": [
          {
            "in": "query",
            "name": "validationToken",
            "type": "string"
          }
        ],
=======
        "summary": "Create Reaction",
        "operationId": "handleReaction",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "message": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "subscriptionId": {
                              "type": "integer"
                            },
                            "resourceData": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                }
                              }
                            },
                            "changeType": {
                              "type": "string",
                              "enum": [
                                "updated",
                                "deleted"
                              ]
                            }
                          }
                        }
                      }
                    }
=======
                  "reaction": {
                    "type": "string"
                  },
                  "reaction_model_name": {
                    "type": "string"
                  },
                  "model_name": {
                    "type": "string"
                  },
                  "reaction_model_record_id": {
                    "type": "integer"
                  },
                  "model_record_id": {
                    "type": "integer"
                  },
                  "timeline_id": {
                    "type": "integer"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Outlook-Calendar WebHook Callback Successfully"
=======
            "description": "Reaction created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/zoom/deAuthorization/webhook": {
      "post": {
        "tags": [
          "Web Hook"
=======
    "/icon-type": {
      "get": {
        "tags": [
          "Icon-Type"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Zoom De-Authorization WebHook",
        "operationId": "zoomDeAuthorizationWebHook",
        "parameters": [
          {
            "in": "header",
            "name": "x-zm-request-timestamp",
            "type": "string"
          },
          {
            "in": "header",
            "name": "x-zm-signature",
            "type": "string"
          }
        ],
=======
        "summary": "Get All Icon-Type",
        "operationId": "getIcons",
        "responses": {
          "200": {
            "description": "Icon fetched successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Icon-Type"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create Icon-Type",
        "operationId": "createIcon",
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "event": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object",
                    "properties": {
                      "plainToken": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      }
                    }
=======
                  "iconType": {
                    "type": "string"
                  },
                  "iconJson": {
                    "type": "string"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Zoom De-Authorization WebHook Successful"
=======
            "description": "Icon created successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/zoom/meetings/webhook": {
      "post": {
        "tags": [
          "Web Hook"
=======
    "/icon-type/:id": {
      "get": {
        "tags": [
          "Icon-Type"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Zoom-Meetings Webhook",
        "operationId": "zoomMeetingsWebhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventData": {
                    "type": "object",
                    "properties": {
                      "event": {
                        "type": "string"
                      },
                      "payload": {
                        "type": "object",
                        "properties": {
                          "plainToken": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Zoom-Meetings Webhook Successfully"
=======
        "summary": "Get Icon-Type",
        "operationId": "getIcon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Icon fetched successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
          }
        }
      }
    },
    "/recallAi/meetings/webhook": {
      "post": {
        "tags": [
          "Web Hook"
=======
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Icon-Type"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Listen Recall-Ai Webhook Bot",
        "operationId": "listenRecallAiWebhookBot",
=======
        "summary": "Update Icon-Type",
        "operationId": "updateIcon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "botEventData": {
                    "type": "object",
                    "items": {}
=======
                  "iconJson": {
                    "type": "string"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Recall-Ai Webhook Bot Listened Successfully"
=======
            "description": "Icon updated successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
<<<<<<< HEAD
            "description": "Internal server errors"
=======
            "description": "Internal server error"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        }
      }
    },
<<<<<<< HEAD
    "/zoom-phone/webhook": {
      "post": {
        "tags": [
          "Web Hook"
=======
    "/icon-type/get-data": {
      "get": {
        "$ref": "#/paths/~1icon-type/get"
      }
    },
    "/super-admin": {
      "post": {
        "tags": [
          "Super-Admin"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Zoom-Phone Webhook Callback",
        "operationId": "zoomPhoneWebhookCallback",
        "requestBody": {
          "200": {
            "description": "Zoom-Phone Webhook Callback Successfully"
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server errors"
          },
=======
        "summary": "Super Admin Login",
        "operationId": "superAdminLogin",
        "requestBody": {
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
<<<<<<< HEAD
                  "event": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object",
                    "properties": {
                      "account_id": {
                        "type": "string"
                      },
                      "object": {
                        "type": "object",
                        "properties": {
                          "call_id": {
                            "type": "string"
                          },
                          "caller": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "extension_id": {
                                "type": "string"
                              },
                              "extension_type": {
                                "type": "string"
                              },
                              "user_id": {
                                "type": "string"
                              },
                              "timezone": {
                                "type": "string"
                              },
                              "extension_number": {
                                "type": "integer"
                              },
                              "phone_number": {
                                "type": "string"
                              },
                              "device_id": {
                                "type": "string"
                              },
                              "device_type": {
                                "type": "string"
                              },
                              "device_name": {
                                "type": "string"
                              },
                              "connection_type": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "callee": {
                        "type": "object",
                        "properties": {
                          "extension_number": {
                            "type": "integer"
                          },
                          "phone_number": {
                            "type": "string"
                          },
                          "connection_type": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "connected_start_time": {
                        "type": "string"
                      },
                      "ringing_start_time": {
                        "type": "string"
                      },
                      "call_end_time": {
                        "type": "string"
                      },
                      "handup_result": {
                        "type": "string"
                      },
                      "date_time": {
                        "type": "string"
                      }
                    }
=======
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
                  }
                }
              }
            }
          }
<<<<<<< HEAD
        }
      }
    },
    "/api/auth/zoom/connect": {
      "get": {
        "tags": [
          "Strategy"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Connect Zoom",
        "operationId": "connectZoom",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Zoom Connected successfully"
=======
        },
        "responses": {
          "200": {
            "description": "Super Admin Login Successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/api/auth/zoom/callback": {
      "get": {
        "tags": [
          "Strategy"
=======
    "/recall/generateJoinTokenUrl": {
      "get": {
        "tags": [
          "Recall"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Auth With Zoom",
        "operationId": "authWithZoom",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          },
          {
            "in": "query",
            "name": "state",
            "type": "string"
=======
        "summary": "Generate Token Url",
        "operationId": "generateJoinTokenUrl",
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "organization_id",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "meeting_id",
            "type": "integer",
            "required": true
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          }
        ],
        "responses": {
          "200": {
<<<<<<< HEAD
            "description": "Authentication With Zoom Successful"
=======
            "description": "Generate Token successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
<<<<<<< HEAD
    "/api/auth/{strategyType}/connect": {
      "get": {
        "tags": [
          "Strategy"
=======
    "/org-alerts": {
      "get": {
        "tags": [
          "Org-Alert"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Connect Strategy",
        "operationId": "onAuthenticationRequest",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scope",
            "type": "string"
          },
          {
            "in": "path",
            "name": "strategyType",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Strategy Connected Successfully"
=======
        "summary": "Get Orginal Alerts Setting",
        "operationId": "getOrgAlertsSetting",
        "responses": {
          "200": {
            "description": "Organization Alerts Fetched Successfully."
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
<<<<<<< HEAD
      }
    },
    "/api/auth/{strategyType}/callback": {
      "get": {
        "tags": [
          "Strategy"
=======
      },
      "post": {
        "$ref": "#/paths/~1org-alerts/put"
      },
      "put": {
        "tags": [
          "Org-Alert"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
<<<<<<< HEAD
        "summary": "Callback Strategy",
        "operationId": "onAuthenticationCallback",
        "parameters": [
          {
            "in": "query",
            "name": "state",
            "type": "string"
          },
          {
            "in": "path",
            "name": "strategyType",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Strategy Callback Successfully"
=======
        "summary": "Org-Alert Updated",
        "operationId": "upsertAlerts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_alert": {
                    "type": "boolean"
                  },
                  "invite_alert": {
                    "type": "boolean"
                  },
                  "failed_login_alert": {
                    "type": "boolean"
                  },
                  "reset_pass_alert": {
                    "type": "boolean"
                  },
                  "del_pipeline_stage": {
                    "type": "boolean"
                  },
                  "del_account_alert": {
                    "type": "boolean"
                  },
                  "del_contact_alert": {
                    "type": "boolean"
                  },
                  "del_deals_alert": {
                    "type": "boolean"
                  },
                  "del_account_count": {
                    "type": "integer"
                  },
                  "del_contact_count": {
                    "type": "integer"
                  },
                  "del_deals_count": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization Alerts Updated Successfully"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
          },
          "400": {
            "description": "Bad request, invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
<<<<<<< HEAD
=======
      },
      "patch": {
        "$ref": "#/paths/~1org-alerts/put"
      }
    },
    "/org-alerts/get-data": {
      "get": {
        "$ref": "#/paths/~1org-alerts/get"
>>>>>>> e3bc8c418240418165af554bff4cc24663cbd6bd
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "x-session"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "xorganization",
        "schema": {
          "type": "string",
          "format": "uuid",
          "required": true
        }
      }
    },
    "schemas": {
      "AuthRegister": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "required": true
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "organizationCategory": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "initial_color": {
            "type": "string"
          }
        }
      }
    }
  }
}
